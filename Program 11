import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Sample data: 'Size' (in sq ft), 'Bedrooms', 'Age' (in years), 'Price' (in $1000)
data = {
    'Size': [1500, 1600, 1700, 1800, 1900],
    'Bedrooms': [3, 3, 2, 4, 3],
    'Age': [10, 5, 8, 12, 7],
    'Price': [300, 320, 340, 360, 380]
}

# Convert the dictionary into a pandas DataFrame
df = pd.DataFrame(data)

# Define features (X) and target (y)
X = df[['Size', 'Bedrooms', 'Age']]
y = df['Price']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Linear Regression model
model = LinearRegression()

# Train the model
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Calculate Mean Squared Error
mse = mean_squared_error(y_test, y_pred)

print(f"Predicted Prices: {y_pred}")
print(f"Mean Squared Error: {mse:.2f}")
